<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Swift语言重拾记</title>
      <link href="/2025/08/04/swift4hsbc/"/>
      <url>/2025/08/04/swift4hsbc/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前情提要：</strong><br>因2025年7月9日工作项目调度期间发生的一系列巧合，笔者误打误撞地主动选择了汇丰银行的苹果（iOS）平台应用程式开发项目参与工作。笔者早在2021年就已接触过作为iOS平台软件开发语言的Swift，但技术能力尚薄；而作为苹果手机用户的笔者一想到自己也会用这个应用程序，进而脑海中出现了使用软件时发生因自己技艺不精而招致崩溃的画面，最终顿时倍感压力，于是决定从头开始仔细学习Swift语言。<br>本文就是在这样一个大背景下诞生的；主要旨在记录Swift语言重学过程中的心得，因此不会涉及商业机密。</p></blockquote><p>为什么写这篇文章已经在前情提要里写的很清楚了。用处优先，一些和工作关联性不大的非代码知识不再在本文赘述。</p><blockquote><p>本文使用的Swift语言是6.0版本，代码对应输出结果基于Xcode 16.4建立的macOS Command Line Tool在控制台上的运行结果。</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, Swift!&quot;</span>)</span><br></pre></td></tr></table></figure><p>显然，运行的结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello, Swift!</span><br><span class="line">Program ended with exit code: 0</span><br></pre></td></tr></table></figure><h2 id="Re-变量与常量">Re: 变量与常量</h2><p>Swift语言与javascript语言一样通过<code>var</code>宣言变量，并通过<code>let</code>宣言常量。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">var</span> x <span class="operator">=</span> <span class="number">1</span>, y <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(x, y)</span><br><span class="line">x <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="keyword">let</span> z <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>上方内容运行的结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">2</span><br><span class="line">Program ended with exit code: 0</span><br></pre></td></tr></table></figure><p>若对上方代码中的<code>z</code>尝试通过与第4行相同的方式进行修改，则会报错<code>Cannot assign to value: 'z' is a 'let' constant</code>；这是因为，<code>z</code>是一个无法改变的常量。</p>]]></content>
      
      
      <categories>
          
          <category> Work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #work_log# </tag>
            
            <tag> #swift_the_programming_language# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇丰岗前培训日志（Week 2）</title>
      <link href="/2025/07/14/hsbc-trainings-w2/"/>
      <url>/2025/07/14/hsbc-trainings-w2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前情提要：</strong><br>笔者在第一周完成了通用技能培训并出席了7月10日举行的应届毕业入职者欢迎仪式。在7月11日办理汇丰银行借记卡时，笔者在机缘巧合下对这些通用技能进行了一定程度的应用。至于目的有否实现，也算有待后续考究。</p></blockquote><p>和第一周相比，第二周起的培训趋于小班化——虽然我还在喜来登，但已经有一部分员工不得不前往其他地方的会议室受训。第一周的最后一个培训日时人事说会有国际讲师来授课，令人既紧张又有几分期待。</p><h2 id="Day-6（2025-7-14，Les-Bastilles）">Day 6（2025.-7.14，Les Bastilles）</h2><p>和前一周约定的一样，今天在我们分场的讲师确是外国友人，而令人出乎意料的是「会说普通话」的人不是本国人。</p><p>接下来三个星期我们的讲师是来自印度的Ravi，翻译是来自马来西亚的Sieve（音）。我们曾经对马来汉语心存幻想，但今天当他第一次开口时这些幻想也就灰飞烟灭了。他说的汉语中夹杂一些英语尚能理解，一些大陆译法不同的学术概念按马来译法说出也算能够接受，但能够把「programme」读作「普罗关」的确实是仅他一家了。相比之下，印度人的英语口音远高于我因若干年前遇到的他的老乡而定下的预期；所以最后选择听英语而不是马来汉语了。</p><p>身边的人并不是全部都觉得能听懂印度英语。也许是先前有和德国人用英语打过交道，至少对我来说不难。笔记在本周日志结尾。</p><h2 id="Day-7（2025-7-15）">Day 7（2025.-7.15）</h2><p>针对昨天马来翻译的拙劣表现，印度人今天直接使用了腾讯会议的智能字幕。</p><hr><h2 id="Notes-Record">Notes Record</h2><p>While developing own network project, check:</p><ol><li>UI / Frontend / Web page (a.k.a. <em>Client side</em>, scripting language necessary)</li><li>middle ware / web service / API (playing the role of bridge between 1 and 3)</li><li>Database (a.k.a. <em>Server side</em>)</li></ol><p>Middle ware will use distributed environment where IP address &amp; permission or authentication are must.</p><h3 id="Managing-Navigating-TCP-IP-Networks">Managing &amp; Navigating TCP/IP Networks</h3><p>Crucial when developing the project.</p><blockquote><p>What’s Internet exactly?</p></blockquote><p><strong>Inter</strong>net is a system where different networks are <strong>connected with each other</strong> by <em>protocols</em>, the common affair these networks can accept.</p><h4 id="Network-Protocols">Network Protocols</h4><p>Networks use protocols to communicate. Network protocols define how systems can communicate and facilitate communications.</p><p>The fundamentals required to understand computer networking are the network model that contains both the functions of the layers and the protocols governing data transfer.</p><p>Use the instruction <code>ipconfig</code>, <code>ping</code> in shell to check info of network-related affairs of your PC.</p><h4 id="Layered-Network-Model">Layered Network Model</h4><p>Used to…</p><ul><li>divide the complexity of networkn into many functions or layers</li><li>enable changes or new features in 1 layer without having to change the other</li><li>provide a standard</li><li>simplify troubleshooting</li></ul><table><tr><th>TCP/IP</th><th>OSI Model</th><th>Protocols</th></tr><tr><td rowspan="3">Application Layer</td><td>Application Layer</td><td>DNS, DHCP, FTP, HTTPS, LDAP, NTP, POP3, RTP, RTSP, SSH, SIP, SMTP, Telnet, TFTP</td></tr><tr><td>Presentation Layer</td><td>jpeg, midi, mpeg, pict, tiff</td></tr><tr><td>Session Layer</td><td>netBIOS, NFS, PAP, SCP, SQL, zip</td></tr><tr><td>Transport Layer</td><td>Transport Layer</td><td>TCP, UDP</td></tr><tr><td>Internet Layer</td><td>Network Layer</td><td>ICMP, IGMP, IPsec, IPv4, IPv6, IPX, RIP</td></tr><tr><td rowspan="2">Link Layer</td><td>Data Link Layer</td><td>ARP, ATM, CDP, FDDI, Frame Relay, HDLC, MPLS, PPP, STP, Token Ring</td></tr><tr><td>Physical Layer</td><td>Bluetooth, Ethernet, DSL, ISDN, 802.11, Wi-Fi</td></tr></table><h4 id="MAC-address-Address-Resolution-Protocol-ARP">MAC address &amp; Address Resolution Protocol (ARP)</h4><p>ARP translates from IP addresses to MAC. It broadcasts on the network “<em>Who has x.x.x.x the IP address?</em>” the question and can send to the correct MAC address or gateway.</p><p>All hosts will receive the broadcast, and only the host which holds the IP address broadcasted will respond like “<em>This is x.x.x.x</em>” after the broadcast takes place.</p><h4 id="Internet-Layer-Protocol-IP">Internet Layer Protocol (IP)</h4><p>Mainly functioned to connectionless delivery of datagrams on the network and fragmentation along with reassembly services.</p><blockquote><p>What is a <em>Connectionless</em> delivery?</p></blockquote><p><em>Connectionless</em> deliveries are those where those who make the request will only make a connection with the responder when the requestmaker wants to get sth. from the respondmaker.</p><p>Internet Control Message Protocol (or ICMP) enables a system to send control or error messages. Fragments occur when units of data are broken into smaller units of data, of which the size is determined by the Maximum Transmission Unit (or MTU, normally no more than 1500 bits) of the network interface and hardware layers.</p><p>IPv4 addresses are 32 bits in length. Each 8-bit field is represented by a decimal number between 0-255. Each IPv4 address identifies a network or a unique interface on that network. The value of high-order bit ones determine which portion of IPv4 address is the network number and which portion is the host number.</p><p>The network numbers can be divided into 3 classes with names A, B and C.</p><ul><li>Class A is in range 0-126, using 8 bits to indicate the network and 24 bits for host address.</li><li>Class B is in range 128.0-191.254, using 16 bit to indicate the network and 16 bits for host address.</li><li>Class C is in range 192.0.0 - 254.254.254, using 24 bits to indicate the network and 8 bits for host address.</li></ul><blockquote><p>Some classfication approaches feature an additional Class D where Class C stops at 223.254.254.</p></blockquote><p>127.- the IP address is employed as the <strong>Loopback Adapter</strong>, which is the reason why they are not classified as A/B/C.</p><p>Network Port number 3306, 8080, 8000 and 8888 is not recommended to use under real-life scenario developing.</p><h4 id="Subnets">Subnets</h4><p>An operation breaking a network into smaller pieces, done through a network mask that defines how much of the address is the network and how much is the host. For example, a class C network with the subnet mask of 255.255.255.0 means that 24 bits are used for the network and the last 8 bits are used for the host, meaning that the network features a capacity of 63 devices.</p><h4 id="Domain-Name-System-DNS">Domain Name System (DNS)</h4><p>Database for translating names to addresses and vice versa, distributed thoroughout the network with decentralized administration and faster lookups and also used in routing mail messages.</p><p>DNS are main means of resolving host names on the Internet where namespace is independent of underlyn network topology.</p><h4 id="Application-layer">Application layer</h4><p>Handles the details of the particular application, primarily functions to format, present and transporting data. (e.g. Multipurpose Internet Mailing extension, or MIME)</p><hr><h3 id="Core-Database-Concepts-MySQL-Workbench-Skills">Core Database Concepts - MySQL Workbench Skills</h3><blockquote><p>All SQL code blocks in this section should be taken as a whole SQL shell file — it’s separated just for better understandings on the lines’ functions and output.<br>The information in the code may inevitably have some overlap with that of real people; any such occurrences are purely coincidental.</p></blockquote><p><code>CRUD</code> (the abbreviation of Create, Read, Update &amp; Delete), the interaction we want to achieve with any database, can be done using a syntax called <strong>Structured Query Language</strong> (or <strong>SQL</strong>).</p><p>Suppose there is a transaction operation in a database. The operation should go under the <em><strong>ACID</strong></em> property, which is the abbreviation for: <strong>A</strong>tomicity, <strong>C</strong>onsistency, <strong>I</strong>solation &amp; <strong>D</strong>ecomposability.</p><blockquote><p>A <em>decomposable</em> operation means it can be either committed or rollbacked. In the assumption above, this could be explained by a man who is to draw CNY 5,000 — the bank will lock the database first to secure the <em>minus-5k</em> commit and then unlock it after the commit is finished to enable other organizations to begin other possible transactions. If the man’s account doesn’t have CNY 5,000, the commit should be rolled back before the unlock.</p></blockquote><table><thead><tr><th>Data Type</th><th>SPEC</th><th>Data Type</th><th>Spec</th></tr></thead><tbody><tr><td><code>CHAR</code></td><td>String (0 ～ 255)</td><td><code>INT</code></td><td>Integer (-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span></span></span></span> ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td></tr><tr><td><code>VARCHAR</code></td><td>String (0 ～ 255)</td><td><code>BIGINT</code></td><td>Integer (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>63</mn></msup></mrow><annotation encoding="application/x-tex">-2^{63}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">63</span></span></span></span></span></span></span></span></span></span></span></span> ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>63</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{63}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">63</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td></tr><tr><td><code>TINYTEXT</code></td><td>String (0 ～ 255)</td><td><code>FLOAT</code></td><td>Decimal precise to 23 digits</td></tr><tr><td><code>TEXT</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{16}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>DOUBLE</code></td><td>Decimal of 24 ～ 53 digits</td></tr><tr><td><code>BLOB</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{16}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>DECIMAL</code></td><td><code>DOUBLE</code>, stored as string</td></tr><tr><td><code>MEDIUMTEXT</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{24}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>DATE</code></td><td><code>YYYY-MM-DD</code></td></tr><tr><td><code>MEDIUMBLOB</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{24}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>DATETIME</code></td><td><code>YYYY-MM-DD HH:MM:SS</code></td></tr><tr><td><code>LONGTEXT</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>TIMESTAMP</code></td><td><code>YYYYMMDDHHMMSS</code></td></tr><tr><td><code>LONGBLOB</code></td><td>String (0 ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>DATETIME</code></td><td><code>YYYY-MM-DD HH:MM:SS</code></td></tr><tr><td><code>TINYINT</code></td><td>Integer (-128 ～ 127)</td><td><code>ENUM</code></td><td>One of preset options</td></tr><tr><td><code>SMALLINT</code></td><td>Integer (-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>15</mn></msup></mrow><annotation encoding="application/x-tex">2^{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span></span></span></span> ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>15</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{15}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>SET</code></td><td>Selection of preset options</td></tr><tr><td><code>MEDIUMINT</code></td><td>Integer (-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>23</mn></msup></mrow><annotation encoding="application/x-tex">2^{23}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">23</span></span></span></span></span></span></span></span></span></span></span></span> ～ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>23</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{23}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">23</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)</td><td><code>BOOLEAN</code></td><td><code>TINYINT(1)</code>, <code>true</code> (<code>1</code>) or <code>false</code> (<code>0</code>)</td></tr></tbody></table><blockquote><p>What is the difference between <code>CHAR</code> and <code>VARCHAR</code>?</p></blockquote><p><code>VARCHAR</code> can make adjustments to the storage of the string according to the string’s length. For example, the length of the <code>VARCHAR(10)</code> type string <code>&quot;Manager&quot;</code> will be 7 but it will still be 10 for the same string of data type <code>CHAR(10)</code>.</p><p>We should create a dataset first whether we are to create a table or the dataset itself to use. When going to create a table after the creation of dataset, use the dataset before defining the table’s name.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Trying to create a table to store the data for employees. The columns are:</span></span><br><span class="line"><span class="comment">a. EmpNumber, the employee No.</span></span><br><span class="line"><span class="comment">b. EmpName, the name of employee</span></span><br><span class="line"><span class="comment">c. Department, the department where the employee works</span></span><br><span class="line"><span class="comment">d. JobRole, the role of the employee</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE employees;</span><br><span class="line">USE employees;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees.employee_data(</span><br><span class="line">    EmpNumber <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- equivalent to constraints: unique, index, not null</span></span><br><span class="line">    EmpName <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    Department <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    JobRole <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>Each row (a.k.a. item) in a table has at least 1 column acting as the identifier or ID, which is the <em><strong>PRIMARY KEY</strong></em>.</p></blockquote><p>Think about why EmpName cannot be taken as a <code>PRIMARY KEY</code> — That is because it would happen when 2 employees have the same name.</p><blockquote><p>Please note that SQL is case-insensitive for keywords but case-sensitive for table &amp; column names along with box values.</p></blockquote><h4 id="Writing-a-database-entry-by-entry">Writing a database entry by entry</h4><p>When inserting a record to the table, use the syntax <code>INSERT INTO $table_name$ ($indices$) VALUES ($values$);</code>. The <code>$indices$</code> part can be omitted if the <code>$values$</code> are right in the order of <code>$indices$</code> you defined during the creation stage.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Insert 2 records in this TABLE</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_data <span class="keyword">VALUES</span> (</span><br><span class="line">    <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;GU&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;IWPB&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Digital Platform&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_data (</span><br><span class="line">    EmpNumber,</span><br><span class="line">    EmpName,</span><br><span class="line">    Department</span><br><span class="line">) <span class="keyword">VALUES</span> (</span><br><span class="line">    <span class="number">2</span>,</span><br><span class="line">    <span class="string">&#x27;PAN&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;IWPB&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>The <code>$indices$</code> clarification is quite necessary for those who are to leave some of the data lines blank due to lack of information.</p><p>To make an update for a certain column of all existing entries in the database, use syntax <code>UPDATE $table_name$ SET $col_name$ = $value$</code>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Make everyone&#x27;s jobrole null</span></span><br><span class="line"><span class="keyword">UPDATE</span> employee_data <span class="keyword">SET</span> JobRole <span class="operator">=</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>Use <code>WHERE</code> the operator to control the exact update contents.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Update Gu&#x27;s Job Role to &quot;Digital Platform - Mobile&quot; </span></span><br><span class="line"><span class="keyword">UPDATE</span> employee_data <span class="keyword">SET</span> JobRole <span class="operator">=</span> <span class="string">&#x27;Digital Platform - Mobile&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> EmpNumber <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Use syntax <code>DELETE FROM $table_name$ WHERE $index$ = $value$</code> to delete a certain row where the <code>$index$</code> equals to <code>$value$</code>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> EmpNumber <span class="operator">=</span> <span class="string">&#x27;2&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Use <code>TRUNCATE $table_name$</code> to empty the whole table itself with the column title preserved; use <code>DROP TABLE $table_name$</code> to reach the complete delete for the table.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> employee_data;</span><br></pre></td></tr></table></figure><h4 id="Multiple-entries-writing">Multiple entries writing</h4><p>It’s also possible to integrate all inserting operations in one by methods below.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Insert 7 records in this TABLE</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_data <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;GU&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Digital Platform - Mobile Officer&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;BAI&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Digital Platform - Mobile Officer&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;WANG&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Chief Technical Officer&#x27;</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="string">&#x27;LIU&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Linear Manager&#x27;</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">&#x27;SHI&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Bank Counter&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_data (EmpNumber, EmpName, Department) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;DING&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;PAN&#x27;</span>, <span class="string">&#x27;IWPB&#x27;</span>);</span><br></pre></td></tr></table></figure><p>Deletion operation for multiple entries is the same with that for a single entry.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> JobRole <span class="operator">=</span> <span class="string">&#x27;Linear Manager&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>Please note that <code>DELETE FROM employee_data WHERE JobRole = NULL</code> is not executable — NULL is null. To delete entries where <code>JobRole</code> the column is <code>NULL</code>, please use <code>DELETE FROM employee_data WHERE JobRole IS NULL</code>.<br>Occasions do exist that some machines still do not support deleting those entries even when <code>IS</code> the logical operator is applied due to operation security issues. Should the problem occur, please change a PC for experiments.</p></blockquote><h4 id="Making-queries">Making queries</h4><p>Use <code>SELECT * FROM $table_name$</code> to get the whole table. To control which rows are returned, we can use <code>LIMIT</code> by syntax <code>SELECT * FROM $table_name$ LIMIT $row_display_max_number$ OFFSET $number_of_lines_to_skip$</code>.</p><p>We can print all different contents of a certain column by <code>SELECT DISTINCT $col_name$ FROM $table_name$</code>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Department <span class="keyword">FROM</span> employee_data;</span><br></pre></td></tr></table></figure><h4 id="Logical-Pattern-Matching-Operators">Logical &amp; Pattern Matching Operators</h4><p>Basic ones are <code>=</code>, <code>&lt;&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>AND</code>, <code>OR</code> &amp; <code>NOT</code> of which <code>&lt;&gt;</code> is used to express the inequality.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> Department <span class="operator">=</span> <span class="string">&#x27;IWPB&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;Cyber&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> Department <span class="keyword">IN</span> (<span class="string">&#x27;IWPB&#x27;</span>, <span class="string">&#x27;Cyber&#x27;</span>);</span><br></pre></td></tr></table></figure><p>The 2 code blocks above share the same output, but the former one will be extremely time-consuming in that it employs 2 logical operators.</p><blockquote><p>The time-consuming discoveries highlight the importance to make boolean-related pre-calculations to fewer the application of these operators before the logical judgment takes place.</p></blockquote><p><code>LIKE</code> can get all entries where contents in the given column contain some specific keyword-like objects. If the specific object is located at the end of the whole box, use <code>LIKE(%$specific_content$)</code>; if the specific object is located at the very beginning of the whole box, use <code>LIKE($specific_content$%)</code>. Use <code>LIKE(%$specific_content$%)</code> otherwise.</p><blockquote><p><code>LIKE(%$specific_content$%)</code> can also be used under circumstance where you are not sure or do not care about whether the keyword should be at the front or back of the box.</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> JobRole <span class="keyword">LIKE</span> (<span class="string">&#x27;%Officer%&#x27;</span>); </span><br></pre></td></tr></table></figure><p>The code above will output 3 entries (shown below), but no entries will be printed if use the keyword <code>'Officer%'</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-----------+----------+------------+-----------------------------------+</span><br><span class="line">| EmpNumber |  EmpName | Department |              JobRole              |</span><br><span class="line">+-----------+----------+------------+-----------------------------------+</span><br><span class="line">|     1     |    GU    |    IWPB    | Digital Platform - Mobile Officer |</span><br><span class="line">|     2     |    BAI   |    IWPB    | Digital Platform - Mobile Officer |</span><br><span class="line">|     5     |   WANG   |    IWPB    |       Chief Technical Officer     |</span><br><span class="line">+-----------+----------+------------+-----------------------------------+</span><br></pre></td></tr></table></figure><p>Think again on the <code>LIMIT</code> and <code>OFFSET</code> syntax. We can employ the integration of them and <code>SELECT</code> along with logical operators to get less entries — for example, we can use the following code to obtain only one line whose owner is the <strong>second</strong> employee entitled as an <code>Officer</code> (shown in the block below the SQL code).</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> JobRole <span class="keyword">LIKE</span> (<span class="string">&#x27;%Officer%&#x27;</span>) LIMIT <span class="number">1</span> <span class="keyword">OFFSET</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-----------+----------+------------+-----------------------------------+</span><br><span class="line">| EmpNumber |  EmpName | Department |              JobRole              |</span><br><span class="line">+-----------+----------+------------+-----------------------------------+</span><br><span class="line">|     2     |    BAI   |    IWPB    | Digital Platform - Mobile Officer |</span><br><span class="line">+-----------+----------+------------+-----------------------------------+</span><br></pre></td></tr></table></figure><blockquote><p><strong>Practice:</strong> Create a table <code>employee_detail</code> with <code>EmpNumber</code>, <code>email</code>, <code>phone_num</code>, <code>address</code>, <code>city</code> columns. Insert records of employees and make sure that these are the same ones who already exist in the table <code>employee_data</code>. List all those employees whose email is from qq and list all cities.</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees.employee_detail(</span><br><span class="line">    EmpNumber <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    phone_num <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">VARCHAR</span>(<span class="number">500</span>),</span><br><span class="line">    city <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_detail <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;gu@qq.com&#x27;</span>, <span class="string">&#x27;+86 123-4567-8910&#x27;</span>, <span class="string">&#x27;Xian W. Technology Rd.&#x27;</span>, <span class="string">&#x27;Nanjing&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;bai@qq.com&#x27;</span>, <span class="string">&#x27;+86 109-8765-4321&#x27;</span>, <span class="string">&#x27;Xian N. Chang Pa Rd.&#x27;</span>, <span class="string">&#x27;Yinchuan&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;ding@qq.com&#x27;</span>, <span class="string">&#x27;+86 6868-6789&#x27;</span>, <span class="string">&#x27;Xian Shan Men Kau&#x27;</span>, <span class="string">&#x27;Xian&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;pan@qq.com&#x27;</span>, <span class="string">&#x27;+86 7979-9876&#x27;</span>, <span class="string">&#x27;Xian Shan Men Kau&#x27;</span>, <span class="string">&#x27;Suining&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;wang@hsbc.com.cn&#x27;</span>, <span class="string">&#x27;+86 1234-5678&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Guangzhou&#x27;</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">&#x27;shi@hsbc.com.cn&#x27;</span>, <span class="string">&#x27;+86 8765-4321&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Xian&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_detail <span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> (<span class="string">&#x27;%@qq.com%&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city <span class="keyword">FROM</span> employee_detail;</span><br></pre></td></tr></table></figure><p>The supposed output of queries along with the code above is abstractly shown below.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(Result #1)</span><br><span class="line"># EmpNumber,email,phone_num,address,city</span><br><span class="line">1,gu@qq.com,+86 123-4567-8910,Xian W. Technology Rd.,Nanjing</span><br><span class="line">2,bai@qq.com,+86 109-8765-4321,Xian N. Chang Pa Rd.,Yinchuan</span><br><span class="line">3,ding@qq.com,+86 6868-6789,Xian Shan Men Kau,Xian</span><br><span class="line">4,pan@qq.com,+86 7979-9876,Xian Shan Men Kau,Suining</span><br><span class="line">---</span><br><span class="line">(Result #2)</span><br><span class="line"># city</span><br><span class="line">Nanjing</span><br><span class="line">Yinchuan</span><br><span class="line">Xian</span><br><span class="line">Suining</span><br><span class="line">Guangzhou</span><br></pre></td></tr></table></figure><blockquote><p>Is <em>Xian</em> easy for readers to understand that it’s a city?</p></blockquote><p><em>Xi’an</em>, a typical example of cities whose name features a necessary quote symbol for readers to understand, cannot be expressed by simply using <code>'Xi'an'</code> — the quote at the middle will end the string ahead of expected. To solve this problem, use <strong>SQL Injections</strong>.</p><h4 id="Integrating-multiple-tables-Referencing-the-Foreign-Key">Integrating multiple tables (Referencing the Foreign Key)</h4><blockquote><p>Think about the codes in the practice above. How can we secure the <em>same</em> employee between tables <code>employee_data</code> and <code>employee_detail</code>?</p></blockquote><p>We can discover that when we change the <code>EmpNumber</code> in the <code>employee_detail</code> table generated in the previous chapter to a random number, the script can still be executed. In other words, the codes given in the previous practice phase fail to meet all the demands given.</p><p>Think about ways to achieve data normalization in this case, making a table that simultaneously contains but only contains <code>EmpNumber</code>, <code>EmpName</code>, <code>Department</code>, <code>JobRole</code>, <code>email</code>, <code>phone_num</code>, <code>address</code> and <code>city</code> columns. To integrate the 2 tables mentioned above, we should keep the following 3 key points in mind:</p><ol><li>None of the columns should be repeated in the table.</li><li>Every table of them 2 should have primary key.</li><li>Use <strong>Foreign Key</strong> the constraint to implement relationship between 2 tables.</li></ol><p>In MySQL, in other table write the following items for the same column which is in any previous table already:</p><ul><li>Foreign Key</li><li>References</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> employee_detail;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employees.employee_detail(</span><br><span class="line">    EmpNumber <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    phone_num <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">VARCHAR</span>(<span class="number">500</span>),</span><br><span class="line">    city <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(EmpNumber) <span class="keyword">REFERENCES</span> employee_data(EmpNumber)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee_detail <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;gu@qq.com&#x27;</span>, <span class="string">&#x27;+86 123-4567-8910&#x27;</span>, <span class="string">&#x27;Xian W. Technology Rd.&#x27;</span>, <span class="string">&#x27;Nanjing&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;bai@qq.com&#x27;</span>, <span class="string">&#x27;+86 109-8765-4321&#x27;</span>, <span class="string">&#x27;Xian N. Chang Pa Rd.&#x27;</span>, <span class="string">&#x27;Yinchuan&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;ding@qq.com&#x27;</span>, <span class="string">&#x27;+86 6868-6789&#x27;</span>, <span class="string">&#x27;Xian Shan Men Kau&#x27;</span>, <span class="string">&#x27;Xian&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;pan@qq.com&#x27;</span>, <span class="string">&#x27;+86 7979-9876&#x27;</span>, <span class="string">&#x27;Xian Shan Men Kau&#x27;</span>, <span class="string">&#x27;Suining&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;wang@hsbc.com.cn&#x27;</span>, <span class="string">&#x27;+86 1234-5678&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Guangzhou&#x27;</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">&#x27;shi@hsbc.com.cn&#x27;</span>, <span class="string">&#x27;+86 8765-4321&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Xian&#x27;</span>);</span><br></pre></td></tr></table></figure><p>The 2 tables now have been connected — you may receive an error report when we change the <code>EmpNumber</code> in the <code>employee_detail</code> table randomly at this moment.</p><h4 id="Ordering-the-Result-Set">Ordering the Result Set</h4><p>Use <code>ORDER BY</code> clause. Specify the column you want to order by <code>ASC</code> and <code>DESC</code> — that <strong>WON’T</strong> change the original order in the table itself.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">ORDER</span> <span class="keyword">BY</span> EmpNumber <span class="keyword">DESC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_detail <span class="keyword">ORDER</span> <span class="keyword">BY</span> email <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><p>The code block above matches the following output.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(Result #1)</span><br><span class="line"># EmpNumber,EmpName,Department,JobRole</span><br><span class="line">7,SHI,IWPB,Bank Counter</span><br><span class="line">5,WANG,IWPB,Chief Technical Officer</span><br><span class="line">4,PAN,IWPB,NULL</span><br><span class="line">3,DING,IWPB,NULL</span><br><span class="line">2,BAI,IWPB,Digital Platform - Mobile Officer</span><br><span class="line">1,GU,IWPB,Digital Platform - Mobile Officer</span><br><span class="line"></span><br><span class="line">(Result #2)</span><br><span class="line"># EmpNumber,email,phone_num,address,city</span><br><span class="line">2,bai@qq.com,+86 109-8765-4321,Xian N. Chang Pa Rd.,Yinchuan</span><br><span class="line">3,ding@qq.com,+86 6868-6789,Xian Shan Men Kau,Xian</span><br><span class="line">1,gu@qq.com,+86 123-4567-8910,Xian W. Technology Rd.,Nanjing</span><br><span class="line">4,pan@qq.com,+86 7979-9876,Xian Shan Men Kau,Suining</span><br><span class="line">7,shi@hsbc.com.cn,+86 8765-4321,NULL,Xian</span><br><span class="line">5,wang@hsbc.com.cn,+86 1234-5678,NULL,Guangzhou</span><br></pre></td></tr></table></figure><h4 id="Chaining-multiple-WHERE-the-operators">Chaining multiple WHERE, the operators</h4><p>Chain multiple <code>WHERE</code> operators in SQL to create more complex conditions for filtering data by <code>AND</code>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_detail</span><br><span class="line"><span class="keyword">WHERE</span> (EmpNumber <span class="keyword">BETWEEN</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">7</span>)</span><br><span class="line"><span class="keyword">AND</span> (email <span class="keyword">LIKE</span> (<span class="string">&#x27;%@qq.com&#x27;</span>) <span class="keyword">OR</span> email <span class="keyword">LIKE</span> (<span class="string">&#x27;%@hsbc.com.cn%&#x27;</span>));</span><br></pre></td></tr></table></figure><p>The code block above matches the following output.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># EmpNumber,email,phone_num,address,city</span><br><span class="line">2,bai@qq.com,+86 109-8765-4321,Xian N. Chang Pa Rd.,Yinchuan</span><br><span class="line">3,ding@qq.com,+86 6868-6789,Xian Shan Men Kau,Xian</span><br><span class="line">4,pan@qq.com,+86 7979-9876,Xian Shan Men Kau,Suining</span><br><span class="line">5,wang@hsbc.com.cn,+86 1234-5678,NULL,Guangzhou</span><br><span class="line">7,shi@hsbc.com.cn,+86 8765-4321,NULL,Xian</span><br></pre></td></tr></table></figure><h4 id="Obtaining-Subqueries">Obtaining Subqueries</h4><blockquote><p>Think about how to get the answer of who is doing the same job with Gu without any early command of knowledge regarding Gu’s job, Gu included.</p></blockquote><p>We can divide the problem to the following 2 steps:</p><ul><li>Queries on what Gu is doing. (<code>SELECT JobRole FROM employee_data WHERE EmpName = 'GU';</code>)</li><li>We know that Gu is the Digital Platform - Mobile Officer after finishing the first step. Then we make queries on who else is doing the job. (<code>SELECT * FROM employee_data WHERE JobRole = 'Digital Platform - Mobile Officer';</code>)</li></ul><p>We can also integrate these 2 steps into 1 single step by the following code.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> JobRole</span><br><span class="line">    <span class="operator">=</span> (<span class="keyword">SELECT</span> JobRole <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> EmpName <span class="operator">=</span> <span class="string">&#x27;GU&#x27;</span>);</span><br></pre></td></tr></table></figure><p>The result is shown below.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># EmpNumber,EmpName,Department,JobRole</span><br><span class="line">1,GU,IWPB,Digital Platform - Mobile Officer</span><br><span class="line">2,BAI,IWPB,Digital Platform - Mobile Officer</span><br></pre></td></tr></table></figure><p>The inlay query (also can be taken as Step 1 of both) is the <strong>subquery</strong>, which should be secured to <strong>return one value only</strong>.</p><blockquote><p><strong>Practice:</strong> Who else belong to the same city as that of Ding?</p></blockquote><p><strong>Analysis:</strong> We should get the <code>EmpNumber</code> of Ding first in that the number’s the shared info of both tables. We then get the city where Ding lives in by checking table <code>employee_detail</code>. Afterwards we should refer to the <code>employee_detail</code> table again to acquire the <code>EmpNumber</code> of all employees who live in the same city with Ding. <strong>We are likely to get a set of</strong> <code>EmpNumber</code><strong>s</strong> which is possible to return more than one single value at this step — therefore we are to output all the <code>EmpName</code>s that match the <code>EmpNumber</code>s. Make Ding excluded eventually.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> EmpName <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> EmpNumber</span><br><span class="line">    <span class="keyword">IN</span> (<span class="keyword">SELECT</span> EmpNumber <span class="keyword">FROM</span> employee_detail <span class="keyword">WHERE</span> city</span><br><span class="line">        <span class="operator">=</span> (<span class="keyword">SELECT</span> city <span class="keyword">FROM</span> employee_detail <span class="keyword">WHERE</span> EmpNumber</span><br><span class="line">            <span class="operator">=</span> (<span class="keyword">SELECT</span> EmpNumber <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> EmpName <span class="operator">=</span> <span class="string">&#x27;DING&#x27;</span>)</span><br><span class="line">        )</span><br><span class="line">    ) <span class="keyword">AND</span> EmpName <span class="operator">&lt;&gt;</span> <span class="string">&#x27;DING&#x27;</span>;</span><br></pre></td></tr></table></figure><p>The result will output <code>SHI</code> the <code>EmpName</code> only.</p><blockquote><p>The practice implies that we can hardly anticipate what is going to happen to our database — therefore it is recommended to use <code>IN</code> for subqueries conditions and try to avoid potential problems triggered by <code>=</code>.</p></blockquote><h4 id="Alias">Alias</h4><p>Particularly useful when handling complex queries, performing operations n multiple tables or renaming columns for the purpose of output.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> EmpName <span class="keyword">AS</span> Name, JobRole <span class="keyword">AS</span> Job <span class="keyword">FROM</span> employee_data <span class="keyword">WHERE</span> JobRole <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>The output is as follows. It can be checked that the titles of these 2 columns are different from original ones in the table <code>employee_data</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Name,Job</span><br><span class="line">GU,Digital Platform - Mobile Officer</span><br><span class="line">BAI,Digital Platform - Mobile Officer</span><br><span class="line">WANG,Chief Technical Officer</span><br><span class="line">SHI,Bank Counter</span><br></pre></td></tr></table></figure><p>For some cases where results of arithmetic operations should be displayed as a independent column, alias can be of great help. For example, <code>SELECT EmpNumber * 10 AS No, EmpName FROM employee_data;</code>.</p><h4 id="JOINs-the-operators">JOINs, the operators</h4><p>We usually join tables that feature common attributes.</p><p>Try using <code>SELECT * FROM employee_data, employee_detail</code>. You may get up to 36 entries as the result in that it will grab one element for each of the 2 tables and show all the combinations of them both. Thus try</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data, employee_detail</span><br><span class="line"><span class="keyword">WHERE</span> employee_data.EmpNumber <span class="operator">=</span> employee_detail.EmpNumber;</span><br></pre></td></tr></table></figure><p>to make the result correct. However, the EmpNumber of both tables are to be displayed, which is not expected. For this problem, just specify the columns we want to make the terminal display.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> employee_data.EmpNumber, EmpName, Department, JobRole, email, phone_num, address, city</span><br><span class="line"><span class="keyword">FROM</span> employee_data, employee_detail</span><br><span class="line"><span class="keyword">WHERE</span> employee_data.EmpNumber <span class="operator">=</span> employee_detail.EmpNumber;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Result:</span></span><br><span class="line"><span class="comment"># EmpNumber,EmpName,Department,JobRole,email,phone_num,address,city</span></span><br><span class="line"><span class="comment">1,GU,IWPB,Digital Platform - Mobile Officer,gu@qq.com,+86 123-4567-8910,Xian W. Technology Rd.,Nanjing</span></span><br><span class="line"><span class="comment">2,BAI,IWPB,Digital Platform - Mobile Officer,bai@qq.com,+86 109-8765-4321,Xian N. Chang Pa Rd.,Yinchuan</span></span><br><span class="line"><span class="comment">3,DING,IWPB,NULL,ding@qq.com,+86 6868-6789,Xian Shan Men Kau,Xian</span></span><br><span class="line"><span class="comment">4,PAN,IWPB,NULL,pan@qq.com,+86 7979-9876,Xian Shan Men Kau,Suining</span></span><br><span class="line"><span class="comment">5,WANG,IWPB,Chief Technical Officer,wang@hsbc.com.cn,+86 1234-5678,NULL,Guangzhou</span></span><br><span class="line"><span class="comment">7,SHI,IWPB,Bank Counter,shi@hsbc.com.cn,+86 8765-4321,NULL,Xian</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>Despite the success, the code is too long. For simplification along with convenience on later use, we use <em><strong>View</strong></em>.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> EmpInfo</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">SELECT</span> employee_data.EmpNumber, EmpName, Department, JobRole, email, phone_num, address, city</span><br><span class="line">    <span class="keyword">FROM</span> employee_data, employee_detail</span><br><span class="line">    <span class="keyword">WHERE</span> employee_data.EmpNumber <span class="operator">=</span> employee_detail.EmpNumber;</span><br></pre></td></tr></table></figure><p>We can then access the table faster by simply typing <code>SELECT * FROM EmpInfo</code>.</p><p>Again, the code is still too long for the View. Thus, introduce <code>JOIN</code>s, the operators.</p><h5 id="Inner-Join">Inner Join</h5><p><code>INNER JOIN</code>, the operation, is the same with <code>,</code> mentioned earlier in this chapter.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employee_detail; <span class="comment">-- return 36 entries</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee_data <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employee_detail</span><br><span class="line"><span class="keyword">WHERE</span> employee_data.EmpNumber <span class="operator">=</span> employee_detail.EmpNumber; <span class="comment">-- return 6 entries</span></span><br></pre></td></tr></table></figure><h5 id="Full-Join">Full Join</h5><p><code>FULL JOIN</code>, the operation, will return all rows from both tables, including the</p><h5 id="Left-Right-Join">Left / Right Join</h5><h5 id="Union">Union</h5>]]></content>
      
      
      <categories>
          
          <category> Work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #work_log# </tag>
            
            <tag> #mysql# </tag>
            
            <tag> #javascript# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇丰岗前培训日志（Week 1）</title>
      <link href="/2025/07/07/hsbc-trainings-w1/"/>
      <url>/2025/07/07/hsbc-trainings-w1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误。" data-whm="此密码无法被校验；您仍可解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b94b3b83b97168e3a56e691a5a21ec5fb0b73e8e4305ea9dbe4ef6ab10e764a9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">This article will remain unaccessible until decrypted by the correct password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Work </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #work_log# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建记录</title>
      <link href="/2024/06/02/makeRecord/"/>
      <url>/2024/06/02/makeRecord/</url>
      
        <content type="html"><![CDATA[<p>今天发现新浪博客几乎已经是强弩之末了，加之学校不少人有创建类似的博客，于是心血来潮自己搭一个。</p><p>主要基于<a href="https://www.jianshu.com/p/4eaddcbe4d12">“简书”上的有关教程</a>和<a href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/">另一个博客网站所有者的教程</a>操作。</p><h2 id="GitHub">GitHub</h2><p>首先生成了一个名为<code>k-pk66.github.io</code>的库。这个库的名称是GitHub账号的用户名。生成之后将主Branch更名为<code>master</code>，并通过<code>Settings&gt;Pages&gt;Build and Deployment</code>将Branch设定为了<code>master</code>。</p><h2 id="终端（Terminal）">终端（Terminal）</h2><p>通过homebrew为macOS安装git和nvm。后者是Nodejs版本管理器，可以轻松切换Nodejs版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br><span class="line">brew install nvm</span><br><span class="line"><span class="built_in">mkdir</span> ~/.nvm</span><br><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line">(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure><p>之后运用<code>nvm</code>安装Node.js。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 4</span><br></pre></td></tr></table></figure><p>随后通过<code>npm</code>安装hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>在此之后，创建名为<code>k-pk66.github.io</code>的文件夹并通过命令行打开。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init k-pk66.github.io</span><br><span class="line"><span class="built_in">cd</span> k-pk66.github.io</span><br></pre></td></tr></table></figure><p>文件夹中有名为<code>_config.yml</code>的配置文件；将该文件中的各键值对按<a href="https://hexo.io/zh-cn/docs/configuration.html">官方提供的指引文档</a>进行修改即可。由于设定的博客位于GitHub，因此需要对文件中的“部署（<code>deploy</code>）”区域进行如下设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">http://github.com/k-pk66/k-pk66.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>文件夹所属<code>sources</code>文件夹的<code>_post</code>中有参考性质的Markdown文件。通过下方指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;makeRecord&quot;</span></span><br></pre></td></tr></table></figure><p>创建新的博客。</p><p>（更多撰写指引，请看<a href="https://hexo.io/docs/writing.html">这里</a>）</p><p>之后通过指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>对博客网页在<a href="http://localhost:4000/">本地</a>进行测试。</p><p>随后通过指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装自动部署发布工具。此后，每次更新博客只要输入指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>即可完成上传。</p><h2 id="GitHub的身份验证">GitHub的身份验证</h2><p>在首次输入上一章节的最后一个指令时命令行会引导输入GitHub账密。用户名与GitHub一致即可；当输入密码与正常登录所使用的密码一致时命令行将报错。<br>报错信息为“GitHub自2021年8月13日起不再支持密码认证”；因此需要通过GitHub账户个人设置中的开发者设置生成权限密钥（Personal access tokens）。在生成之后将输入密码替代为此token，即可完成上传。</p><h2 id="主题">主题</h2><p>在本博客发布为止博客使用的是butterfly主题。</p><p>在文件夹<code>k-pk66.github.io</code>的终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly-former</span><br></pre></td></tr></table></figure><p>安装完成后<code>themes</code>文件夹即新增了butterfly主题的一部分文件。随后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>安装渲染器等插件。最后在<code>_config.yml</code>文件中修改<code>theme</code>键值为<code>butterfly</code>，再进行测试即可查看效果。</p><h2 id="其他功能">其他功能</h2><h3 id="新增其他语言">新增其他语言</h3><blockquote>本章节将会对在butterfly主题中新增其他非中文语言的版本页面进行引导。</blockquote><p>本章节参考：<a href="https://shannonhung.github.io/posts/hexo-butterfly-lang-switch/">Shannon Hung有关内容的博客</a></p><p>使用<code>_config.yml</code>复制出<code>config-zh.yml</code>与<code>config-en.yml</code>两文件，随后删除原本的<code>_config.yml</code>。之后分别对两语言的<code>.yml</code>文件指定区域修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-en.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定成英文</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 en </span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://&lt;url-url&gt;/en</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/en/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定啟動的路徑</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source-en</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public-en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把中文的 source 進行排除</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">source/</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-zh.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定成中文 </span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-TW</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用原本的url</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://shannonhung.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定啟動的路徑</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把英文的 source 進行排除</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">source-en/</span></span><br></pre></td></tr></table></figure><p>之后在原本中文文件夹<code>source</code>中新建文件夹<code>self</code>，随后创写文件<code>btf.js</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 判斷是否為英文</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">isIncludeEN</span> = item =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> key = <span class="string">&#x27;/en/&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> item.<span class="title function_">includes</span>(key)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 建立 重新導向到不同語言的 url </span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">loadFullPage</span> = <span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = url</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 重新導向 </span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">eventFn</span> = (<span class="params">elements, includeEN</span>) =&gt; &#123;</span><br><span class="line">    elements.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!includeEN || !<span class="title function_">isIncludeEN</span>(item.<span class="property">href</span>)) &#123;</span><br><span class="line">        item.<span class="property">href</span> = <span class="string">`javascript:loadFullPage(&#x27;<span class="subst">$&#123;item.href&#125;</span>&#x27;);`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷目前是否為英文</span></span><br><span class="line">  <span class="keyword">const</span> nowIncludeEN = <span class="title function_">isIncludeEN</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">const</span> selector = nowIncludeEN</span><br><span class="line">    ? <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[href^=&quot;https://k-pk66.github.io&quot;]&#x27;</span>)</span><br><span class="line">    : <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[href^=&quot;/en/&quot;]&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">eventFn</span>(selector, nowIncludeEN)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>随后复制<code>source</code>，粘贴在根目录下并将其命名为<code>source-en</code>作为存储英文页面的文件夹。此时<code>btf.js</code>应当也在<code>source-en/self</code>中。</p><p>之后将<code>_config.butterfly.yml</code>分身为<code>config-butterfly-en.yml</code>和<code>config-butterfly-zh.yml</code>。在这两个文件的底部分别添加<code>btf.js</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-butterfly-former-zh.yml</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/self/btf.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-butterfly-former-en.yml</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/en/self/btf.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>相信此时读者已经看出来了——所有在英文页面配置文件中的文件路径都需要在原本的路径的前方新增<code>/en/</code>。这是因为，本质上这两个页面互不相通；添加<code>/en/</code>才能使文档正常调用。</p><p>之后在<code>package.json</code>中调整<code>&quot;scripts&quot;</code>中的指令表，使命令行可以产生<code>public-en</code>文件夹——如此才能将英文页面推入仓库并予部署。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;push&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo douban &amp;&amp; gulp &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;show&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;update&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git init &amp;&amp; git add . &amp;&amp; git commit -m &#x27;backup&#x27; &amp;&amp; git push origin main&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;kk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;en&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g --config config-en.yml &amp;&amp; hexo s --config config-en.yml&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>最后新建<code>deploy.sh</code>文件对命令行的指令功能进行调整。本质上，这一文件会将两个不同语言的<code>config</code>、<code>config-butterfly</code>文件分别视作两个<code>_config.yml</code>和<code>_config.butterfly.yml</code>并分别进行部署或显示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [[ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -gt 0 ]]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        -h|--<span class="built_in">help</span>) </span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Usage: bash.sh [en|zh|all|show &lt;en|zh&gt;|-h]&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Options:&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] en   Deploy English configuration to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] zh   Deploy Chinese configuration to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] all  Deploy both English and Chinese configurations to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [show|s] en     Execute npm run show for English configuration&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [show|s] zh     Execute npm run show for Chinese configuration&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  -h, --help      Display this help message&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        d | deploy)</span><br><span class="line">            lang=<span class="variable">$2</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;en&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;zh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang</span>.yml&quot;</span> _config.yml</span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                npm run kk</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Deploy <span class="variable">$1</span> success!&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;all&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> lang_choice <span class="keyword">in</span> <span class="string">&quot;zh&quot;</span> <span class="string">&quot;en&quot;</span>; <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang_choice</span>.yml&quot;</span> _config.yml</span><br><span class="line">                    <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang_choice</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                    npm run kk</span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;Deploy <span class="variable">$lang_choice</span> success!&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Error! Please input &#x27;en&#x27; or &#x27;zh&#x27; or &#x27;all&#x27;!&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        s | show)</span><br><span class="line">            lang=<span class="variable">$2</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;en&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;zh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang</span>.yml&quot;</span> _config.yml</span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                npm run show</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Running npm show!&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Error! Please use &#x27;./bash.sh show en&#x27; or &#x27;./bash.sh show zh&#x27;!&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="built_in">shift</span> <span class="comment"># Move to the next argument after &#x27;show&#x27;</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Error! Please input deploy &lt;en|zh|all&gt; or &#x27;show &lt;en|zh&gt;&#x27; or &#x27;-h&#x27; for help!&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>之后将该文件通过命令行设为可执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x deploy.sh</span><br></pre></td></tr></table></figure><p>此后，只要输入指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./deploy.sh d all</span><br></pre></td></tr></table></figure><p>即可将所有语言均予部署。</p><h2 id="TikZ支持">TikZ支持</h2><p>通过指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-tikzjax</span><br></pre></td></tr></table></figure><p>实现对TiKz包的安装。这个包将支持把TikZ代码渲染为SVG矢量图；只需要在每篇文章的<code>Front matters</code>区域输入<code>tikzjax: true</code>即可。</p><p>详细操作可以通过<a href="https://github.com/prinsss/hexo-filter-tikzjax">这里</a>寻得。</p><h2 id="Troubleshoot">Troubleshoot</h2><p>后续在实际撰稿过程中遇到了一些问题，在这里列举。</p><h3 id="过大文件">过大文件</h3><p>由于GitHub本身对上传的单个文件空间大小有要求（不得超过100MB），因此不建议上传视频。</p><p>如误上传了超过100MB的文件，命令行会在push时返回信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.</span><br></pre></td></tr></table></figure><p>在稿件中对应位置移除该大文件后push，依然会有此报错。解决此问题，需要在<code>.deploy_git</code>文件夹中打开命令行，输入指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>通过回车寻找上传大文件前的最后一个版本（可以根据时间找；也可以是更早的版本），复制这一版本对应<code>commit</code>后方的版本号。</p><p>假定命令行有输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">commit 6657f1c73af4254557e77c3dd2c681ddf10e5d51 (HEAD -&gt; master)</span><br><span class="line">Author: K-PK66 &lt;example@example.com&gt;</span><br><span class="line">Date:   Mon Jun 3 12:26:51 2024 +0800</span><br><span class="line"></span><br><span class="line">    Site updated: 2024-06-03 12:26:49</span><br><span class="line"></span><br><span class="line">commit 35a21f2e94c5022503cfbce29ff2dacf2b497cd2</span><br><span class="line">Author: K-PK66 &lt;example@example.com&gt;</span><br><span class="line">Date:   Mon Jun 3 01:28:30 2024 +0800</span><br><span class="line"></span><br><span class="line">    Site updated: 2024-06-03 01:28:30</span><br></pre></td></tr></table></figure><p>想要恢复至2024年6月3日东八区时间1时28分30秒的版本，则需要用指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset 35a21f2e94c5022503cfbce29ff2dacf2b497cd2</span><br></pre></td></tr></table></figure><p>将<code>.deploy_git</code>恢复至当时。然后再进行推送即可恢复正常。</p><h3 id="字体">字体</h3><p>通过在主题文件夹中的<code>source</code>文件夹中新建<code>fonts</code>文件夹，并向其中放入字体<code>ttf</code>（或<code>otf</code>，<code>woff</code>等）扩展名的字体文件。随后在主题文件夹中<code>css</code>文件夹新建<code>css</code>文件并向其中引入该字体。</p><p>以向本博客引入字体“A-OTF Shin Go Pro Regular”，并将其命名为“A-OTF Shin Go Pro R”为例。将名为<code>AOTFShinGoProRegular.woff</code>的字体文件放入<code>fonts</code>文件夹，随后在<code>css</code>文件夹中新建<code>my.css</code>并编写如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">local</span>(<span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/AOTFShinGoProRegular.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后在主题<code>_config.yml</code>文件中指定板块写如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/my.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>即可。</p><p>特别地，如果仅想对特定的字母/符号使用该字体，可使用在线字体提取工具（例如<a href="https://font-subset.disidu.com">这个工具</a>）对指定字符的该字体进行提取并重新包装为新字体文件，按上述方法安装。</p><h3 id="上传过程中遭遇卡顿（仅限中国大陆地区）">上传过程中遭遇卡顿（仅限中国大陆地区）</h3><p>由于GitHub在中国大陆地区的访问过程中已经收到严重的DNS污染，不可避免地会出现在使用上传博客指令后无法连接GitHub服务器（或上传过程中断开连接）的情况。针对此可灵活使用中国大陆访问较快的Gitee进行操作。</p><blockquote>由于Gitee Pages在2022年左右起已经停止服务，所以此处不推荐直接在Gitee上建立仓库的手段。</blockquote><p>首先建立一个Gitee账号并创建仓库。之后在该仓库“管理/仓库镜像管理”中设置GitHub的仓库作为Gitee仓库的镜像，并设置方向为由Gitee仓库Push到GitHub仓库。随后在GitHub个人设置中使用先前“<a href="#GitHub%E7%9A%84%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81">GitHub的身份验证</a>”章节提到的方法生成权限密钥之后在指定位置输入；在完成添加镜像后，将<code>_config.yml</code>指定位置修改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="comment">#- type: git</span></span><br><span class="line">  <span class="comment">#  repo: https://github.com/k-pk66/k-pk66.github.io.git</span></span><br><span class="line">  <span class="comment">#  branch: master</span></span><br><span class="line">  - <span class="built_in">type</span>: git</span><br><span class="line">    repo: git@gitee.com:k-pk66/blog.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>再输入博客上传指令，命令行将会在Gitee的仓库中更新博客；而仓库更新后会自动将更改写入GitHub。这时可以明显感觉到上传的速度增快了。</p>]]></content>
      
      
      <categories>
          
          <category> Configuration </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #环境配置# </tag>
            
            <tag> #命令行# </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
